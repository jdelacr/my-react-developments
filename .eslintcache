[{"C:\\Users\\Justyn\\Documents\\MyCodes\\my-react-developments\\src\\index.js":"1","C:\\Users\\Justyn\\Documents\\MyCodes\\my-react-developments\\src\\Layout\\Layout.js":"2","C:\\Users\\Justyn\\Documents\\MyCodes\\my-react-developments\\src\\components\\Footer.js":"3","C:\\Users\\Justyn\\Documents\\MyCodes\\my-react-developments\\src\\pages\\Home.js":"4","C:\\Users\\Justyn\\Documents\\MyCodes\\my-react-developments\\src\\pages\\About.js":"5","C:\\Users\\Justyn\\Documents\\MyCodes\\my-react-developments\\src\\Routes.js":"6","C:\\Users\\Justyn\\Documents\\MyCodes\\my-react-developments\\src\\components\\Navigation.js":"7","C:\\Users\\Justyn\\Documents\\MyCodes\\my-react-developments\\src\\pages\\Apps.js":"8","C:\\Users\\Justyn\\Documents\\MyCodes\\my-react-developments\\src\\pages\\apps\\Calculator.js":"9","C:\\Users\\Justyn\\Documents\\MyCodes\\my-react-developments\\src\\pages\\apps\\Todo.js":"10"},{"size":293,"mtime":1609344014887,"results":"11","hashOfConfig":"12"},{"size":323,"mtime":1610463190506,"results":"13","hashOfConfig":"12"},{"size":822,"mtime":1610547919683,"results":"14","hashOfConfig":"12"},{"size":2500,"mtime":1610466300405,"results":"15","hashOfConfig":"12"},{"size":941,"mtime":1610548574179,"results":"16","hashOfConfig":"12"},{"size":821,"mtime":1609859642750,"results":"17","hashOfConfig":"12"},{"size":1319,"mtime":1610467785891,"results":"18","hashOfConfig":"12"},{"size":593,"mtime":1610463379315,"results":"19","hashOfConfig":"12"},{"size":2984,"mtime":1609859206985,"results":"20","hashOfConfig":"12"},{"size":4410,"mtime":1610462893510,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"cc9knr",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"C:\\Users\\Justyn\\Documents\\MyCodes\\my-react-developments\\src\\index.js",[],["46","47"],"C:\\Users\\Justyn\\Documents\\MyCodes\\my-react-developments\\src\\Layout\\Layout.js",["48"],"import React from \"react\";\r\nimport Menu from \"../components/Navigation\";\r\nimport Footer from \"../components/Footer\";\r\nimport { Container } from \"semantic-ui-react\";\r\n\r\nfunction Layout({ children }) {\r\n  return (\r\n    <div>\r\n      <Menu />\r\n      {children}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","C:\\Users\\Justyn\\Documents\\MyCodes\\my-react-developments\\src\\components\\Footer.js",[],"C:\\Users\\Justyn\\Documents\\MyCodes\\my-react-developments\\src\\pages\\Home.js",[],"C:\\Users\\Justyn\\Documents\\MyCodes\\my-react-developments\\src\\pages\\About.js",[],"C:\\Users\\Justyn\\Documents\\MyCodes\\my-react-developments\\src\\Routes.js",[],"C:\\Users\\Justyn\\Documents\\MyCodes\\my-react-developments\\src\\components\\Navigation.js",[],"C:\\Users\\Justyn\\Documents\\MyCodes\\my-react-developments\\src\\pages\\Apps.js",[],"C:\\Users\\Justyn\\Documents\\MyCodes\\my-react-developments\\src\\pages\\apps\\Calculator.js",["49"],"import React, { Component } from \"react\";\r\nimport \"../../styles/apps/calculator.scss\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\n\r\nexport class Calculator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: \"0\",\r\n      newValue: \"\",\r\n      numbers: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n      functions: [\r\n        { func: \"plus\", symbol: \"+\" },\r\n        { func: \"subtract\", symbol: \"-\" },\r\n        { func: \"multiply\", symbol: \"*\" },\r\n        { func: \"divide\", symbol: \"/\" },\r\n        { func: \"equal\", symbol: \"=\" },\r\n        { func: \"period\", symbol: \".\" },\r\n      ],\r\n    };\r\n\r\n    this.displayValue = this.displayValue.bind(this);\r\n  }\r\n\r\n  displayValue = (event) => {\r\n    const newVal = this.state.newValue.concat(event.target.value);\r\n    this.setState({ newValue: `${newVal}` });\r\n    this.setState({ value: `${newVal}` });\r\n  };\r\n\r\n  calculate = (num) => {\r\n    return Function(`'use strict'; return(${num})`)();\r\n  };\r\n\r\n  addFunction = (event) => {\r\n    let currentVal = \"\";\r\n\r\n    //Append decimal in the display\r\n    if (event.target.value === \".\") {\r\n      const decimalVal = this.state.value.concat(event.target.value);\r\n      this.setState({ value: `${decimalVal}` });\r\n    }\r\n\r\n    if (event.target.value === \"=\") {\r\n      this.setState({\r\n        value: `${this.calculate(`${this.state.newValue}`)}`,\r\n        newValue: `${this.calculate(`${this.state.newValue}`)}`,\r\n      });\r\n    } else {\r\n      currentVal = this.state.newValue.concat(event.target.value);\r\n      this.setState({ value: `${currentVal}`, newValue: `${currentVal}` });\r\n    }\r\n\r\n    console.log(this.state.newValue);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Segment textAlign=\"center\" vertical>\r\n          <Container>\r\n            <Header as=\"h1\" content=\"React Calculator\" />\r\n          </Container>\r\n        </Segment>\r\n        <div className=\"calculator\">\r\n          <Display result={this.state.value} />\r\n          {this.state.numbers.map((num) => (\r\n            <div key={num} className={`num-${num}`}>\r\n              <button\r\n                value={num}\r\n                className={`num-${num}`}\r\n                onClick={this.displayValue}\r\n              >\r\n                {num}\r\n              </button>\r\n            </div>\r\n          ))}\r\n\r\n          {this.state.functions.map((functions) => (\r\n            <div key={functions.func} className={`func-${functions.func}`}>\r\n              <button\r\n                value={functions.symbol}\r\n                key={functions.func}\r\n                onClick={this.addFunction}\r\n              >\r\n                {functions.symbol}\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass Display extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"result\">\r\n        <div>\r\n          <h2>{this.props.result}</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n","C:\\Users\\Justyn\\Documents\\MyCodes\\my-react-developments\\src\\pages\\apps\\Todo.js",["50"],"import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Header,\r\n  Segment,\r\n  Input,\r\n  List,\r\n  Icon,\r\n  Divider,\r\n  Button,\r\n} from \"semantic-ui-react\";\r\nimport \"../../styles/apps/todo.scss\";\r\n\r\nexport class Todo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      newTodo: \"\",\r\n      updateTodo: \"\",\r\n      todo: [\r\n        { message: \"Todo 1\", editText: false },\r\n        { message: \"Todo 2\", editText: false },\r\n      ],\r\n    };\r\n\r\n    this.editTodo = this.editTodo.bind(this);\r\n    this.updateTodo = this.updateTodo.bind(this);\r\n  }\r\n\r\n  handleInput = (event) => {\r\n    this.setState({ newTodo: `${event.target.value}` });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ updateTodo: `${event.target.value}` });\r\n  };\r\n\r\n  addTodo = () => {\r\n    let appendTodo = [{ message: `${this.state.newTodo}`, editText: false }];\r\n    let newList = this.state.todo.concat(appendTodo);\r\n    this.setState({ todo: newList });\r\n    console.log(newList);\r\n  };\r\n\r\n  deleteTodo = (event) => {\r\n    let updatedList = this.state.todo.filter((item, index) => {\r\n      return index !== parseInt(event.target.value);\r\n    });\r\n\r\n    this.setState({ todo: updatedList });\r\n  };\r\n\r\n  editTodo = (event) => {\r\n    const todoIndex = this.state.todo.findIndex(\r\n      (item, index) => index === parseInt(event.target.value)\r\n    );\r\n    let newTodo = [...this.state.todo];\r\n\r\n    newTodo[todoIndex] = {\r\n      ...newTodo[todoIndex],\r\n      editText: !newTodo[todoIndex].editText,\r\n    };\r\n\r\n    this.setState({ todo: newTodo });\r\n  };\r\n\r\n  updateTodo = (i) => {\r\n    const updateIndex = this.state.todo.findIndex((item, index) => index === i);\r\n    let updatedTodo = [...this.state.todo];\r\n\r\n    updatedTodo[updateIndex] = {\r\n      ...updatedTodo[updateIndex],\r\n      message: `${this.state.updateTodo}`,\r\n      editText: !updatedTodo[updateIndex].editText,\r\n    };\r\n\r\n    this.setState({ todo: updatedTodo });\r\n    console.log(this.state.todo);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container className=\"todo\">\r\n          <Segment textAlign=\"center\" vertical>\r\n            <Container>\r\n              <Header as=\"h1\" content=\"Grocery Todo List\" />\r\n            </Container>\r\n          </Segment>\r\n          <Segment basic textAlign=\"center\">\r\n            <Segment.Inline>\r\n              <div class=\"ui action input\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Add todo list....\"\r\n                  onChange={this.handleInput}\r\n                />\r\n                <button class=\"ui button\" onClick={this.addTodo}>\r\n                  Add\r\n                </button>\r\n              </div>\r\n            </Segment.Inline>\r\n          </Segment>\r\n          {this.state.todo.map((todo, index) => (\r\n            <div>\r\n              <div key={index} className=\"ui stackable two column grid\">\r\n                <div className=\"ten wide column\">\r\n                  {todo.editText ? (\r\n                    <div className=\"ui segment basic\">\r\n                      <Input\r\n                        transparent\r\n                        placeholder={todo.message}\r\n                        action={{\r\n                          content: \"Update\",\r\n                          onClick: () => this.updateTodo(index),\r\n                        }}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"ui segment basic\">{todo.message}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"six wide column\">\r\n                  <div className=\"ui segment basic\">\r\n                    <Button\r\n                      onClick={this.editTodo}\r\n                      value={index}\r\n                      className=\"content\"\r\n                    >\r\n                      <Icon name=\"edit\" />\r\n                    </Button>\r\n                    <Button\r\n                      onClick={this.deleteTodo}\r\n                      value={index}\r\n                      className=\"content\"\r\n                    >\r\n                      <Icon name=\"trash\" />\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <Divider />\r\n            </div>\r\n          ))}\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Todo;\r\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":4,"column":10,"nodeType":"57","messageId":"58","endLine":4,"endColumn":19},{"ruleId":"59","severity":1,"message":"60","line":33,"column":12,"nodeType":"61","messageId":"62","endLine":33,"endColumn":52},{"ruleId":"55","severity":1,"message":"63","line":7,"column":3,"nodeType":"57","messageId":"58","endLine":7,"endColumn":7},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","no-new-func","The Function constructor is eval.","CallExpression","noFunctionConstructor","'List' is defined but never used.","no-global-assign","no-unsafe-negation"]